name: Build wheels

# on: [push, pull_request, workflow_dispatch]
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
  

  generate_wheels_matrix:
    name: Generate wheels matrix
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set-matrix.outputs.include }}
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Install cibuildwheel and pypyp
      run: |
        pipx install cibuildwheel==2.22.0
        pipx install pypyp==1.2.0
        pipx install "mypy==1.14.0"

    - id: set-matrix


      run: |
        MATRIX=$(
          {
            cibuildwheel --config-file=cibuildwheel.toml --print-build-identifiers --platform linux . \
            | pyp 'json.dumps({"only": x, "os": "ubuntu-latest"})' \
            && cibuildwheel --config-file=cibuildwheel.toml --print-build-identifiers --platform macos . \
            | pyp 'json.dumps({"only": x, "os": "macos-latest"})' \
            && cibuildwheel --config-file=cibuildwheel.toml --print-build-identifiers --platform windows . \
            | pyp 'json.dumps({"only": x, "os": "windows-latest"})'
          } | pyp 'json.dumps(list(map(json.loads, lines)))'
        )
        echo "include=$MATRIX" | tee -a $GITHUB_OUTPUT
      env:
        CIBW_ARCHS_LINUX: x86_64
        CIBW_ARCHS_MACOS: x86_64 arm64
        CIBW_ARCHS_WINDOWS: AMD64

  build_wheels:
    name: Build ${{ matrix.only }}
    needs: [generate_wheels_matrix, tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.generate_wheels_matrix.outputs.include) }}

    steps:
    - uses: actions/checkout@v4.2.2
    - uses: pypa/cibuildwheel@v2.22.0
      with:
        config-file: cibuildwheel.toml
        package-dir: .
        only: ${{ matrix.only }}

    - uses: actions/upload-artifact@v4.5.0
      with:
        name: dist-${{ matrix.only }}
        path: ./wheelhouse/*.whl
        overwrite: true

  build_sdist_python_wheel:
    name: sdist and python wheel
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - uses: actions/setup-python@v5.3.0
      name: Install Python
      with:
        python-version: "3.9"
#      - name: Run check-manifest
#        run: |
#          pip install check-manifest
#          check-manifest -v
    - name: Build sdist and wheel
      run: |
        python -m pip install --upgrade setuptools build "mypy==1.14.0"
        python -m build
    - uses: actions/upload-artifact@v4.5.0
      with:
        name: dist
        path: |
          dist/*.whl
          dist/*.tar.gz

  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/rsv
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Get packages
        uses: actions/download-artifact@v4.1.8
        with:
          pattern: dist*
          path: dist/
          merge-multiple: true
      - name: Get more packages
        uses: actions/download-artifact@v4.1.8
        with:
          pattern: dist-*
          path: ./wheelhouse/*.whl
          merge-multiple: true
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.3
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          skip-existing: true

    needs: [
      build_wheels,
      build_sdist_python_wheel
    ]